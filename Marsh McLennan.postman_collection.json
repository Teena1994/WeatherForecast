{
	"info": {
		"_postman_id": "93b4da0e-189e-457a-8361-d6e562fc5b58",
		"name": "Marsh McLennan",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request]() types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable]() called `base_url` with the sample request [https://postman-api-learner.glitch.me](). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts]() in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics]()  \n[API documentation]()  \n[Authorization methods]()",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28785935"
	},
	"item": [
		{
			"name": "direct api - get current weather details based on latitude and longitude",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.open-meteo.com/v1/forecast?latitude=22.3511148&longitude=78.6677428&current_weather=true",
					"protocol": "https",
					"host": [
						"api",
						"open-meteo",
						"com"
					],
					"path": [
						"v1",
						"forecast"
					],
					"query": [
						{
							"key": "latitude",
							"value": "22.3511148"
						},
						{
							"key": "longitude",
							"value": "78.6677428"
						},
						{
							"key": "current_weather",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get location coordinates details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/weather/location/india",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"weather",
						"location",
						"india"
					]
				}
			},
			"response": []
		},
		{
			"name": "get weather update based on latitude and longitude",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/weather/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"weather",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "insert search history data",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"state\":\"Arizona\",\r\n\"current_weather\":{\r\n        \"temperature\":29.8,\r\n        \"windspeed\":6.5,\r\n        \"winddirection\":109,\r\n        \"weathercode\":0,\r\n        \"is_day\":1,\r\n        \"time\":\"2023-08-01T14:00\"},\r\n\"latitude\":-112.073844,\r\n\"longitude\":33.448457}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/weather/insert/searchHistory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"weather",
						"insert",
						"searchHistory"
					]
				}
			},
			"response": []
		},
		{
			"name": "get search history or lookups",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/weather/searchHistory",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"weather",
						"searchHistory"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}